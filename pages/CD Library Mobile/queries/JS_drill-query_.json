{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "query_",
    "fullyQualifiedName": "JS_drill.query_",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "CD Library Mobile",
    "collectionId": "CD Library Mobile_JS_global_mobile",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(collection_id, artist_id) => {\n  storeValue('query_input', 'SELECT album \"Album\", shelf \"Shelf\",tracks \"Tracks\",time \"Time\",year \"Year\",url \"Wiki\", album_art \"Album Art\", 0 artist_id,album_id,(SELECT CASE WHEN (COUNT(*) > 0) THEN COUNT(*) ELSE NULL END FROM tracks WHERE tracks.album_id = albums.album_id AND play LIKE \\'https%\\') \"# Playable\",NULL \"Play\" FROM albums WHERE artist_id =' + artist_id + ' AND album_id IN (SELECT album_id FROM album_collections WHERE collection_id = ' + collection_id + ') ORDER BY year, album').then(() => query_api.clear()).then(() => query_api.run()).then(() => storeValue('album', dynamic_table.tableData.values().next().value.Album));\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(collection_id, artist_id) => {\n  storeValue('query_input', 'SELECT album \"Album\", shelf \"Shelf\",tracks \"Tracks\",time \"Time\",year \"Year\",url \"Wiki\", album_art \"Album Art\", 0 artist_id,album_id,(SELECT CASE WHEN (COUNT(*) > 0) THEN COUNT(*) ELSE NULL END FROM tracks WHERE tracks.album_id = albums.album_id AND play LIKE \\'https%\\') \"# Playable\",NULL \"Play\" FROM albums WHERE artist_id =' + artist_id + ' AND album_id IN (SELECT album_id FROM album_collections WHERE collection_id = ' + collection_id + ') ORDER BY year, album').then(() => query_api.clear()).then(() => query_api.run()).then(() => storeValue('album', dynamic_table.tableData.values().next().value.Album));\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "CD Library Mobile_JS_drill.query_",
  "deleted": false,
  "gitSyncId": "6363b42e956dd31e95b0b466_6374ed43b9cf46780e15ba1b"
}